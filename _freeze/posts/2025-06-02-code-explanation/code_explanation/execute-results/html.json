{
  "hash": "dc77bca17b001f37f5fe0d4769275c2b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Code Explanation\"\ndescription: \"Code from ENVS 193DS and my explanation of what I was doing and why.\"\nauthor:\n  - name: Kathryn Kolb\n    url: https://kathrynk04.github.io/\ndate: 06-02-2025\ncategories: [ENVS 193DS]\ncitation: \n  url: https://kathrynk04.github.io/posts/2025-06-02-code-explanation/ \ndraft: false\necho: true\n---\n\n\n\n<p>This code was written for the midterm for ENVS 193DS, which is Statistics for Environmental Science. In the first section, I read in all of the packages that I needed for the entire midterm assignment, but not all of the packages will be used in this section because this was only part of the assignment. I also read in the csv file \"200dailys.csv\" and stored it as an object called \"rain\". This file shows the monthly rainfall recorded by a UCSB rain gauge on top of Ellison Hall.</p>\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse) # loading in packages\nlibrary(janitor)\nlibrary(lterdatasampler)\nlibrary(rstatix)\nlibrary(car)\nlibrary(flextable)\n\nrain <- read_csv(\"200dailys.csv\") # reading in and storing problem 4 data as an object called \"rain\"\n```\n:::\n\n\n\n<p>In the next section, the code wasn't written by me because our instructions were to write in the annotations what each line of code is doing. You can therefore read the annotations to understand the code.</p>\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrain <- read_csv(\"200dailys.csv\")\nrain_clean <- rain |>  \n  \n  # 1. what changes after this function? \n  # Column names are cleaned to replace spaces with underscores, add numbers to duplicated names, and converts characters such as \"%\" and \"#\" to \"percent\" and \"number\", respectively.\n  # give an example. \n  # \"average tussock cm\" would be changed to \"average_tussock_cm\".\n  clean_names() |>  \n  \n  # 2. what new column is created? \n  # A column named \"water_year_minus1\".\n  # give an example of a value in this column.\n  # 1951\n  mutate(water_year_minus1 = water_year - 1) |>  \n  \n  # 3. what old column is changed?\n  # water_year.\n  # give an example of a value in the old column, and explain how it changed. \n  # A value in the old column was 1952 and it would become 1951-1952. It was changed by pasting first the year minus 1 (1951) followed by a \"-\" symbol and then the year (1952).\n  mutate(water_year = paste0(water_year_minus1, \"-\", water_year)) |> \n  \n  # 4. what columns are excluded from the data frame?\n  # \"water_year_minus1\" and \"code\" are excluded.\n  # give an example of a value in water_year_minus1 \n  # 1951\n  # give an example of a value in code \n  # E311\n  select(!c(water_year_minus1, code)) |> \n  \n  # 5. which column is manipulated, and what changes about it? \n  # Hint: run str(rain_clean) in the Console. what do you see for the month column?\n  # The month column is manipulated. The month numbers are turned into factors and the levels of the factors are set with \"9\" as the first level, \"10\" as the second, and so on until \"12\" is the fourth and then it loops back around to \"1\" being the fifth and continues.\n  mutate(month = as_factor(month),\n         month = fct_relevel(\n           month, \n           \"9\", \"10\", \"11\", \"12\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\")\n         ) |>  \n  \n  # 6. what is being calculated? on an annual, monthly, or daily scale? \n  # Total rainfall in inches is being calculated on an annual scale.\n  # give an example. \n  # There was one rain event in September which was 0.01 inches, and one rain event in October which was 0.30 inches. The sum() function would add these two numbers (0.01 + 0.30 = 0.31) and then move on to the next daily_rain cell to continue adding to this value.\n  group_by(month, water_year) %>% \n  summarize(total_rain = sum(daily_rain, na.rm = TRUE)) |>  \n  ungroup() |>  \n  \n  # 7. what is being done to which columns? \n  # missing combinations of values of water_year and month are being filled in with 0\n  # give an example. \n  # july in 1951-1952 was not in the data frame previously, and now is present with a total rain of 0 inches\n  complete(water_year, \n           month, \n           fill = list(total_rain = 0)) |>  \n  \n  # 8. which observations are kept after this filtering step?\n  # Data for the years listed below are kept.\n  filter(water_year %in% c(\"2018-2019\", \n                           \"2019-2020\", \n                           \"2020-2021\", \n                           \"2021-2022\", \n                           \"2022-2023\", \n                           \"2023-2024\"))\n```\n:::\n\n\n\n<p>The last part of the assignment was to write the code to create a figure that looks exactly like the one below, which visualizes the data I stored as an object in the first code chunk. We had to write all of the code for this section from scratch in order to prove that we could apply what we learned in class towards making figures ourselves. This demonstrated our data visualization skills.</p>\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = rain_clean, # creating a plot using the rain_clean data frame\n       aes(x = month, # setting month as the x-axis\n           y = total_rain, # setting total_rain as the y-axis\n           color = water_year, # coloring by water_year\n           group = water_year)) + # grouping by water_year\n  geom_point() + # plotting points\n  geom_line() + # plotting lines\n  scale_color_manual(values = c(\"2018-2019\" = \"red\", # assigning different colors to each year\n                                \"2019-2020\" = \"orange\",\n                                \"2020-2021\" = \"yellow\",\n                                \"2021-2022\" = \"green\",\n                                \"2022-2023\" = \"blue\",\n                                \"2023-2024\" = \"purple\")) +\n  labs(title = \"Monthly rainfall from UCSB rain gauge\", # creating the title\n       x = \"Month\", # labeling the x-axis as \"Month\"\n       y = \"Total monthly rain (inches)\", # labeling the y-axis as \"Total monthly rain (inches)\"\n       color = \"Water year\") + # coloring by water year\n  theme_bw() + # making the theme black and white\n  theme(panel.grid = element_blank()) # getting rid of grid lines\n```\n\n::: {.cell-output-display}\n![](code_explanation_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "code_explanation_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}